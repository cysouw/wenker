counts <- scan("~/Desktop/counts.txt")
dim(counts) <- c(2, length(counts)/2)
counts <- t(counts)
verses <- counts[,2]%%1000
m <- verses > c(verses[-1], 0)
head(counts[m,])
chapters <- counts[m,2]
?printf
?print
chapters <- formatC(counts[m,2], width = 8, flag = "0")
head(chapters)
chapters <- formatC(counts[m,2], width = 8, flag = "0", format = "d")
head(chapters)
length(chapters)
library(qlcMatrix)
read.text
read.text <- function(file) {#
	drop(as.matrix(read.table(file#
							, sep = "\t"#
							, quote = ""#
							, colClasses = "character"#
							, row.names = 1#
							, encoding = "UTF-8"#
							)))#
}
write(chapters, file = '~/Desktop/chapters.txt', nocolumns=1)
write(chapters, file = '~/Desktop/chapters.txt', ncolumns=1)
counts <- scan("~/Desktop/counts.txt")#
dim(counts) <- c(2, length(counts)/2)#
counts <- t(counts)#
#
verses <- counts[,2]%%1000#
m <- verses > c(verses[-1], 0)#
chapters <- formatC(counts[m,2], width = 8, flag = "0", format = "d")
length(counts)
length(chapters)
length(counts[counts<40000000])
length(counts[counts>=40000000])
7958+54742
length(chapters[as.numeric(chapters)<40000000])
length(chapters[as.numeric(chapters)>=40000000])
read.text <- function(file) {#
	drop(as.matrix(read.table(file#
							, sep = "\t"#
							, quote = ""#
							, colClasses = "character"#
							, row.names = 1#
							, encoding = "UTF-8"#
							)))#
}
t <- read.text("/Users/cysouw/Documents/Github/ParallelTexts/corpus/bibles/corpus/aai-x-bible.txt")
head(t)
head(names(t))
substr(head(names(t)), 1,5)
text <- t
available_chapters <- unique(substr(head(names(text)), 1, 5))
str(available_chapters)
available_chapters <- unique(substr(names(text), 1, 5))
str(available_chapters)
head(chapters)
grep("^40001", chapters)
grep("^40001", chapters, value = T)
head(counts)
tmp <- scan("~/Desktop/counts.txt", what="character")
head(tmp)
counts <- scan("~/Desktop/counts.txt", what = "character")#
dim(counts) <- c(2, length(counts)/2)#
counts <- t(counts)
head(counts)
m <- grep(paste0("^", i), counts[,2], value = T)
m <- grep(paste0("^", avail[1]), counts[,2], value = T)
avail <- unique(substr(names(text), 1, 5))
m <- grep(paste0("^", avail[1]), counts[,2], value = T)
str(m)
?setdiff
checkMissing <- function(file) {#
	text <- read.text(file)#
	avail <- unique(substr(names(text), 1, 5))#
	missing <- c()#
	for (i in avail) {#
		present <- grep(paste0("^", i), names(text), value = T)#
		all <- grep(paste0("^", i), counts[,2], value = T)#
		missing <- c(missing, setdiff(present, all))#
	}#
	return(missing)#
}
checkMissing("/Users/cysouw/Documents/Github/ParallelTexts/corpus/bibles/corpus/aai-x-bible.txt")
files <- list.files("/Users/cysouw/Documents/Github/ParallelTexts/corpus/bibles/corpus/")
head(files)
files <- list.files("/Users/cysouw/Documents/Github/ParallelTexts/corpus/bibles/corpus/", full.names = T)
head(files)
files <- list.files("/Users/cysouw/Documents/Github/ParallelTexts/corpus/bibles/corpus/")
setwd("/Users/cysouw/Documents/Github/ParallelTexts/corpus/bibles/corpus/")
getwd()
files <- list.files()
missing <- sapply(files[1:10], checkMissing)
str(missing)
checkMissing("ade-x-bible.txt")
checkMissing("aai-x-bible copy.txt")
setdiff(letters(1:10), "a")
setdiff(letters[1:10], "a")
file <- "aai-x-bible copy.txt"
text <- read.text(file)
avail <- unique(substr(names(text), 1, 5))
str(avail)
missing <- c()
i <- avail[1]
i
present <- grep(paste0("^", i), names(text), value = T)
present
all <- grep(paste0("^", i), counts[,2], value = T)
all
setdiff(present, all)
setdiff(all, present)
checkMissing <- function(file) {#
	text <- read.text(file)#
	avail <- unique(substr(names(text), 1, 5))#
	missing <- c()#
	for (i in avail) {#
		present <- grep(paste0("^", i), names(text), value = T)#
		all <- grep(paste0("^", i), counts[,2], value = T)#
		missing <- c(missing, setdiff(all, present))#
	}#
	return(missing)#
}#
#
setwd("/Users/cysouw/Documents/Github/ParallelTexts/corpus/bibles/corpus/")#
files <- list.files()#
#
missing <- sapply(files[1:10], checkMissing)
str(missing)
?setdiff
setdiff(letters(1:10), "z")
setdiff(letters[1:10], "z")
ignore <- c("40017021", "40018011", "40023014", "41007016", "41009044", "41009046", "41011026", "41015028", "42017036", "42023017", "43005004", "44008037", "44015034", "44024007", "44028029", "45016024")#
#
checkMissing <- function(file) {#
	text <- read.text(file)#
	avail <- unique(substr(names(text), 1, 5))#
	missing <- c()#
	for (i in avail) {#
		present <- grep(paste0("^", i), names(text), value = T)#
		all <- grep(paste0("^", i), counts[,2], value = T)#
		missing <- c(missing, setdiff(all, present))#
	}#
	return(setdiff(missing, ignore))#
}#
#
setwd("/Users/cysouw/Documents/Github/ParallelTexts/corpus/bibles/corpus/")#
files <- list.files()#
#
missing <- sapply(files[1:10], checkMissing)
str(missing)
missing <- sapply(files, checkMissing)
missing("aai-x-bible.txt")
checkMissing("aai-x-bible.txt")
checkMissing("aai-x-bible.txt")->tmp
length(tmp)
checkMissing <- function(file, out = "~/Desktop/missing/") {#
	text <- read.text(file)#
	avail <- unique(substr(names(text), 1, 5))#
	avail <- setdiff(avail, "27003")#
	missing <- c()#
	for (i in avail) {#
		present <- grep(paste0("^", i), names(text), value = T)#
		all <- grep(paste0("^", i), counts[,2], value = T)#
		missing <- c(missing, setdiff(all, present))#
	}#
	missing <- setdiff(missing, ignore)#
	if (length(missing) > 0) {#
		write(missing, file = file.path(out, file), ncolumns = 1)#
	}#
}
missing <- sapply(files[1:20], checkMissing)
missing <- sapply(files[21:100], checkMissing)
missing <- sapply(list.files("../tobechecked/"), checkMissing)
setwd("../tobechecked/")
missing <- sapply(list.files(), checkMissing)
counts <- scan("~/Desktop/counts.txt", what = "character")#
dim(counts) <- c(2, length(counts)/2)#
counts <- t(counts)#
#
ignore <- c("40017021", "40018011", "40021044", "40023014", "41007016", "41009044", "41009046", "41011026", "41015028", "42017036", "42023017", "43005004", "44008037", "44015034", "44024007", "44028029", "45016024", "43007053")
missing <- sapply(list.files(), checkMissing)
counts <- scan("~/Desktop/counts.txt", what = "character")#
dim(counts) <- c(2, length(counts)/2)#
counts <- t(counts)#
#
ignore <- c("40017021", "40018011", "40021044", "40023014", "41007016", "41009044", "41009046", "41011026", "41015028", "42017036", "42023017", "43005004", "44008037", "44015034", "44024007", "44028029", "45016024", "43007053")
missing <- sapply(list.files(), checkMissing)
install.packages("docopt")
library(docopt)
?docopt
?thisfile
system("locate makeStats")
getSrcDirectory(function(x){x})
??getSrcDirectory
?getSrcFilename
sys.frame(1)
sys.frame(0)
sys.frame(0)$ofile
getSrcDirectory(function(x){x})
?docopt
?scan
checkMissing <- function(file, out = "~/Desktop/missing/") {#
	text <- read.text(file)#
	avail <- unique(substr(names(text), 1, 5))#
	avail <- setdiff(avail, ignore_chapters)#
	missing <- c()#
	for (i in avail) {#
		present <- grep(paste0("^", i), names(text), value = T)#
		all <- grep(paste0("^", i), verses, value = T)#
		missing <- c(missing, setdiff(all, present))#
	}#
	missing <- setdiff(missing, ignore_verses)#
	if (length(missing) > 0) {#
		write(missing, file = file.path(out, file), ncolumns = 1)#
	}#
}
verses <- scan("~/Desktop/allverses", what = "character")#
#
ignore_chapters <- c("27003")#
#
ignore_verses <- c("27004035", "27004036", "27004037","40017021", "40018011", "40021044", "40023014", "41007016", "41009044", "41009046", "41011026", "41015028", "42017036", "42023017", "43005004", "44008037", "44015034", "44024007", "44028029", "45016024", "43007053")
verses <- scan("~/Desktop/allverses.txt", what = "character")
setwd("/Users/cysouw/Documents/Github/ParallelTexts/corpus/bibles/tobechecked/")
files <- list.files()
checkMissing <- function(file, outdir) {#
	text <- read.text(file)#
	avail <- unique(substr(names(text), 1, 5))#
	avail <- setdiff(avail, ignore_chapters)#
	missing <- c()#
	for (i in avail) {#
		present <- grep(paste0("^", i), names(text), value = T)#
		all <- grep(paste0("^", i), verses, value = T)#
		missing <- c(missing, setdiff(all, present))#
	}#
	missing <- setdiff(missing, ignore_verses)#
	if (length(missing) > 0) {#
		write(missing, file = file.path(outdir, file), ncolumns = 1)#
	}#
}
missing <- sapply(list.files(), checkMissing, outdir = "~/Desktop/missing/")
files
missing("swe-x-bible-karlxii.txt", "~/Desktop/missing/")
checkMissing("swe-x-bible-karlxii.txt", "~/Desktop/missing/")
read.table("swe-x-bible-karlxii.txt", colClasses="character", quote="")->t
read.table("swe-x-bible-karlxii.txt", colClasses="character", quote="", sep="\t")->t
head(t)
which(duplicated(t[,1]))
t[13841,]
checkMissing("swe-x-bible-karlxii.txt", "~/Desktop/missing/")
missing <- sapply(list.files(), checkMissing, outdir = "~/Desktop/missing/")
library(qlcVisualize)#
library(qlcMatrix)#
library(qlcData)#
library(RColorBrewer)#
library(spdep)#
#
# load functions to process data#
source("scripts/readData.R")#
#
# load metadata#
meta <- read.delim("data/metadata.txt")#
#
# make voronoi for plotting and load plotting functions#
source("scripts/plotting.R")
namesChars <- list(#
	ich1 = "i ch"#
	, bin = "b i n"#
	, sein1 = "s i n d"#
	, gewesen = "g e w e s e n"#
	, bei =  "b ei"#
	, der1 = "d e r e r"#
	, frau = "f r au w e n"#
	, weib = "w ei b e n"#
	, und1 = "u n d"#
	, habe = "h a b e t"#
	, es1 = "d a s"#
	, gegen1 = "g e g e n"#
	, ihr = "h i r e n"#
	, gesagt1 = "g e s a g t"#
	, und2 = "u n d"#
	, sie1 = "s ie"#
	, hat1 = "h a f t"#
	, es2 = "d a s"#
	, will = "w i ll e t e"#
	, soll = "s o ll"#
	, sagen = "s a g e n"#
	, auch = "au ch"#
	, an2 = "a n"#
	, gegen2 = "g e g e n"#
	, ihrer = "h i r e r e r"#
	, tochter = "t o ch t e r n e"#
	, mädchen = "m ä d e ch e n"#
	, deern = "d i r n d l"#
	)#
dataChars <- getAlignChars("data/WS9/WS9_3characters.txt", namesChars)
str(dataChars)
plotSingle(dataChars$r_dr13)
plotSingle(as.character(dataChars$r_dr13))
str(dataChars$r_dr13)
str(dataChars[,"r_dr13"])
str(dataChars[,"r_der13"])
plotSingle(dataChars$r_der13)
library(qlcVisualize)#
library(qlcMatrix)#
library(qlcData)#
library(RColorBrewer)#
library(spdep)#
#
# load functions to process data#
source("scripts/readData.R")#
#
# load metadata#
meta <- read.delim("data/metadata.txt")#
#
# make voronoi for plotting and load plotting functions#
source("scripts/plotting.R")
namesLexicon <- list(#
	  bin = "bin sein war hab"#
	, bei = "bei von nach zu mit"#
	, frau = "Frau Weib Alten Basi Mutter"#
	, gewesen = "gewesen gesein"#
	, zu1 = "für an zu gegen"#
	, ihr = "ihr der sie ihm/ihn"#
	, will = "will tut geht soll macht"#
	, auch = "auch schon gleich"#
	, zu2 = "für an zu gegen"#
	, ihrer = "ihr der sein mein ene"#
	, tochter = "Tochter Mädchen Deern Mensch Lüte Gits Famen"#
	)#
#
lexicon <- getAlignLexicon("data/WS9/WS9_2lexicon.txt", namesLexicon)
namesChars <- list(#
	ich1 = "i ch"#
	, bin = "b i n"#
	, sein1 = "s i n d"#
	, gewesen = "g e w e s e n"#
	, bei =  "b ei"#
	, der1 = "d e r e r"#
	, frau = "f r au w e n"#
	, weib = "w ei b e n"#
	, und1 = "u n d"#
	, habe = "h a b e t"#
	, es1 = "d a s"#
	, gegen1 = "g e g e n"#
	, ihr = "h i r e n"#
	, gesagt1 = "g e s a g t"#
	, und2 = "u n d"#
	, sie1 = "s ie"#
	, hat1 = "h a f t"#
	, es2 = "d a s"#
	, will = "w i ll e t e"#
	, soll = "s o ll"#
	, sagen = "s a g e n"#
	, auch = "au ch"#
	, an2 = "a n"#
	, gegen2 = "g e g e n"#
	, ihrer = "h i r e r e r"#
	, tochter = "t o ch t e r n e"#
	, mädchen = "m ä d e ch e n"#
	, deern = "d i r n d l"#
	)#
dataChars <- getAlignChars("data/WS9/WS9_3characters.txt", namesChars)#
#
# profiles different for dutch and german because of different orthographic traditions#
dataChars <- recodeChars(dataChars, langs = c("11","100"), "data/WS9/graphemesNLD.txt")#
dataChars <- recodeChars(dataChars, langs = c("1","10"), "data/WS9/graphemesDEU.txt")#
#
# write.recoding(dataChars, file = "data/WS9/tmp.yml")#
chars <- recode(dataChars, "data/WS9/recodingChars.yml")
str(dataChars)
levels(dataChars$d_der11)
chars <- recode(dataChars, "data/WS9/recodingChars.yml")
agreement <- cbind(chars$r_der13, lexicon$frau, lexicon$ihr, lexicon$ihrer, lexicon$tochter)
head(agreement)
agreement <- data.frame(chars$r_der13, lexicon$frau, lexicon$ihr, lexicon$ihrer, lexicon$tochter)
head(agreement)
table(agreement[,1:2])
table(agreement[,2:3])
table(agreement[,4:5])
table(agreement[,c(2,4)])
table(agreement[,c(1,4)])
namesLexicon <- list(#
	  bin = "bin sein war hab"#
	, bei = "bei von nach zu mit"#
	, frau = "Frau Weib Alten Basi Mutter"#
	, gewesen = "gewesen gesein"#
	, zu1 = "für an zu gegen"#
	, ihr = "ihr der sie ihm/ihn"#
	, sie1 = "sie die es hij"#
	, sie2 = "sie ich die es hij"#
	, will = "will tut geht soll macht"#
	, auch = "auch schon gleich"#
	, zu2 = "für an zu gegen"#
	, ihrer = "ihr der sein mein ene"#
	, tochter = "Tochter Mädchen Deern Mensch Lüte Gits Famen"#
	)#
#
lexicon <- getAlignLexicon("data/WS9/WS9_2lexicon.txt", namesLexicon)
agreement <- data.frame(#
				chars$r_der13#
				, lexicon$frau#
				, lexicon$ihr#
				, lexicon$sie1#
				, lexicon$sie2#
				, lexicon$ihrer#
				, lexicon$tochter#
)
head(agreement)
table(agreement[,c(2, 4)])
namesLexicon <- list(#
	  bin = "bin sein war hab"#
	, bei = "bei von nach zu mit"#
	, frau = "Frau Weib Alten Basi Mutter"#
	, gewesen = "gewesen gesein"#
	, zu1 = "für an zu gegen"#
	, ihr = "ihr der sie ihm/ihn"#
	, sie1 = "sie die es hij"#
	, sie2 = "sie ich die es hij"#
	, will = "will tut geht soll macht"#
	, auch = "auch schon gleich"#
	, zu2 = "für an zu gegen"#
	, ihrer = "ihr der sein mein ene"#
	, tochter = "Tochter Mädchen Deern Mensch Lüte Gits Famen"#
	)#
#
lexicon <- getAlignLexicon("data/WS9/WS9_2lexicon.txt", namesLexicon)
agreement <- data.frame(#
				chars$r_der13#
				, lexicon$frau#
				, lexicon$ihr#
				, lexicon$sie1#
				, lexicon$sie2#
				, lexicon$ihrer#
				, lexicon$tochter#
)
table(agreement[,c(2, 4)])
table(agreement[,c(2, 5)])
table(agreement[,c(4, 5)])
namesLexicon <- list(#
	  bin = "bin sein war hab"#
	, bei = "bei von nach zu mit"#
	, frau = "Frau Weib Alten Basi Mutter"#
	, gewesen = "gewesen gesein"#
	, zu1 = "für an zu gegen"#
	, ihr = "ihr der sie ihm/ihn"#
	, sie1 = "sie die es hij"#
	, sie2 = "sie ich die es hij"#
	, will = "will tut geht soll macht"#
	, auch = "auch schon gleich"#
	, zu2 = "für an zu gegen"#
	, ihrer = "ihr der sein mein ene"#
	, tochter = "Tochter Mädchen Deern Mensch Lüte Gits Famen"#
	)#
#
lexicon <- getAlignLexicon("data/WS9/WS9_2lexicon.txt", namesLexicon)
namesLexicon <- list(#
	  bin = "bin sein war hab"#
	, bei = "bei von nach zu mit"#
	, frau = "Frau Weib Alten Basi Mutter"#
	, gewesen = "gewesen gesein"#
	, zu1 = "für an zu gegen"#
	, ihr = "ihr der sie ihm/ihn"#
	, sie1 = "sie die es hij ju"#
	, sie2 = "sie ich die es hij ju"#
	, will = "will tut geht soll macht"#
	, auch = "auch schon gleich"#
	, zu2 = "für an zu gegen"#
	, ihrer = "ihr der sein mein ene"#
	, tochter = "Tochter Mädchen Deern Mensch Lüte Gits Famen"#
	)#
#
lexicon <- getAlignLexicon("data/WS9/WS9_2lexicon.txt", namesLexicon)
agreement <- data.frame(#
				chars$r_der13#
				, lexicon$frau#
				, lexicon$ihr#
				, lexicon$sie1#
				, lexicon$sie2#
				, lexicon$ihrer#
				, lexicon$tochter#
)
table(agreement[,c(4, 5)])
library(qlcVisualize)#
library(qlcMatrix)#
library(qlcData)#
library(RColorBrewer)#
library(spdep)#
#
# load functions to process data#
source("scripts/readData.R")#
#
# load metadata#
meta <- read.delim("data/metadata.txt")#
#
# make voronoi for plotting and load plotting functions#
source("scripts/plotting.R")
devtools::install_github("cysouw/qlcVisualize", build_vignettes = TRUE)
install.packages("devtools")
devtools::install_github("cysouw/qlcVisualize", build_vignettes = TRUE)
devtools::install_github("cysouw/qlcVisualize", build_vignettes = TRUE)
devtools::install_github("cysouw/qlcData", build_vignettes = TRUE)
devtools::install_github("cysouw/qlcMatrix", build_vignettes = TRUE)
devtools::install_github("cysouw/qlcMatrix)
devtools::install_github("cysouw/qlcMatrix")
install.packages("spdep")
install.packages(RColorBrewer)
install.packages("RColorBrewer")
library(qlcVisualize)#
library(qlcMatrix)#
library(qlcData)#
library(RColorBrewer)#
library(spdep)#
#
# load functions to process data#
source("scripts/readData.R")#
#
# load metadata#
meta <- read.delim("data/metadata.txt")#
#
# make voronoi for plotting and load plotting functions#
source("scripts/plotting.R")
namesLexicon <- list(#
	  bin = "bin sein war hab"#
	, bei = "bei von nach zu mit"#
	, frau = "Frau Weib Alten Basi Mutter"#
	, gewesen = "gewesen gesein"#
	, zu1 = "für an zu gegen"#
	, ihr = "ihr der sie ihm/ihn"#
	, sie1 = "sie die es hij ju"#
	, sie2 = "sie ich die es hij ju"#
	, will = "will tut geht soll macht"#
	, auch = "auch schon gleich"#
	, zu2 = "für an zu gegen"#
	, ihrer = "ihr der sein mein ene"#
	, tochter = "Tochter Mädchen Deern Mensch Lüte Gits Famen"#
	)#
#
lexicon <- getAlignLexicon("data/WS9/WS9_2lexicon.txt", namesLexicon)
rmarkdown::render("sentence9.R")
namesChars <- list(#
	ich1 = "i ch"#
	, bin = "b i n"#
	, sein1 = "s i n d"#
	, gewesen = "g e w e s e n"#
	, bei =  "b ei"#
	, der1 = "d e r e r"#
	, frau = "f r au w e n"#
	, weib = "w ei b e n"#
	, und1 = "u n d"#
	, habe = "h a b e t"#
	, es1 = "d a s"#
	, gegen1 = "g e g e n"#
	, ihr = "h i r e n"#
	, gesagt1 = "g e s a g t"#
	, und2 = "u n d"#
	, sie1 = "s ie"#
	, hat1 = "h a f t"#
	, es2 = "d a s"#
	, will = "w i ll e t e"#
	, soll = "s o ll"#
	, sagen = "s a g e n"#
	, auch = "au ch"#
	, an2 = "a n"#
	, gegen2 = "g e g e n"#
	, ihrer = "h i r e r e r"#
	, tochter = "t o ch t e r n e"#
	, mädchen = "m ä d e ch e n"#
	, deern = "d i r n d l"#
	)#
dataChars <- getAlignChars("data/WS9/WS9_3characters.txt", namesChars)#
#
# profiles different for dutch and german because of different orthographic traditions#
dataChars <- recodeChars(dataChars, langs = c("11","100"), "data/WS9/graphemesNLD.txt")#
dataChars <- recodeChars(dataChars, langs = c("1","10"), "data/WS9/graphemesDEU.txt")#
#
# write.recoding(dataChars, file = "data/WS9/tmp.yml")#
chars <- recode(dataChars, "data/WS9/recodingChars.yml")
agreement <- data.frame(#
				chars$r_der13#
				, lexicon$frau#
				, lexicon$ihr#
				, lexicon$sie1#
				, lexicon$sie2#
				, lexicon$ihrer#
				, lexicon$tochter#
)
unique(agreement)
?unique
unique(agreement, incomparables=T)
agreement <- data.frame(#
				chars$r_der13#
				, lexicon$frau#
				, lexicon$ihr#
				, lexicon$sie1#
				, lexicon$sie2#
				, lexicon$ihrer#
)
dim(unique(agreement))
table(agreement[,1:2])
table(agreement[,2:3])
table(agreement[,c(1,3)])
which(agreement[,1]=="r" & agreement[,3]=="ihm/ihn")
str(meta)
str(agreement)
meta[which(agreement[,1]=="r" & agreement[,3]=="ihm/ihn"),]
namesLexicon <- list(#
	  bin = "bin sein war hab"#
	, bei = "bei von nach zu mit"#
	, frau = "Frau Weib Alten Basi Mutter"#
	, gewesen = "gewesen gesein"#
	, zu1 = "für an zu gegen"#
	, ihr = "ihr der sie ihm/ihn"#
	, sie1 = "sie die es hij ju"#
	, sie2 = "sie ich die es hij ju"#
	, will = "will tut geht soll macht"#
	, auch = "auch schon gleich"#
	, zu2 = "für an zu gegen"#
	, ihrer = "ihr der sein mein ene"#
	, tochter = "Tochter Mädchen Deern Mensch Lüte Gits Famen"#
	)#
#
lexicon <- getAlignLexicon("data/WS9/WS9_2lexicon.txt", namesLexicon)
agreement <- data.frame(#
				chars$r_der13#
				, lexicon$frau#
				, lexicon$ihr#
				, lexicon$sie1#
				, lexicon$sie2#
				, lexicon$ihrer#
)
table(agreement[,c(2,4)])
table(agreement[,c(2,5)])
table(agreement[,c(4,5)])
